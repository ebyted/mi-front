#!/bin/bash
# Script de diagn√≥stico para el error 404 en /api/token/

echo "üîç DIAGN√ìSTICO DEL ERROR 404 EN API"
echo "==================================="
echo ""

echo "‚úÖ PROGRESO CONFIRMADO:"
echo "   - Mixed Content Error: RESUELTO ‚úÖ"
echo "   - HTTPS funcionando: ‚úÖ" 
echo "   - Frontend conecta con API via HTTPS: ‚úÖ"
echo ""

echo "‚ùå PROBLEMA ACTUAL:"
echo "   - Error: POST https://www.sanchodistribuidora.com/api/token/ 404 (Not Found)"
echo "   - Causa: El backend no responde en la ruta /api/token/"
echo ""

echo "üîß POSIBLES CAUSAS:"
echo "   1. El middleware stripprefix no est√° funcionando correctamente"
echo "   2. El backend no est√° corriendo en el puerto 8030"  
echo "   3. La ruta /token/ no existe en el backend Django"
echo "   4. Configuraci√≥n de routing en Traefik incorrecta"
echo ""

echo "üéØ PASOS PARA RESOLVER:"
echo ""
echo "1. Verificar contenedores ejecut√°ndose:"
echo "   ssh root@168.231.67.221 'docker ps | grep maestro'"
echo ""
echo "2. Verificar logs del backend:"
echo "   ssh root@168.231.67.221 'docker logs maestro_backend_api --tail 20'"
echo ""
echo "3. Probar API directamente (sin Traefik):"
echo "   ssh root@168.231.67.221 'curl -X POST http://localhost:8030/token/ -H \"Content-Type: application/json\"'"
echo ""
echo "4. Verificar routing de Traefik:"
echo "   ssh root@168.231.67.221 'docker logs maestro_traefik | grep backend'"
echo ""
echo "5. Comprobar archivo docker-compose activo:"
echo "   ssh root@168.231.67.221 'head -20 docker-compose.yml'"
echo ""

echo "üöÄ SOLUCI√ìN R√ÅPIDA:"
echo "   El problema es de configuraci√≥n del backend routing."
echo "   Necesitamos verificar que el middleware stripprefix"
echo "   est√© enviando las peticiones correctamente al backend."
echo ""
echo "==================================="
