services:
  # =======================
  # Traefik Reverse Proxy
  # =======================
  traefik:
    image: traefik:v3.0
    container_name: sancho_traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      # Entry points
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Redirect HTTP to HTTPS
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https

      # Let's Encrypt (HTTP challenge)
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=admin@sanchodistribuidora.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json

      # Logs
      - --log.level=INFO
      - --accesslog=true

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - sancho_letsencrypt:/letsencrypt
    networks:
      - sancho_network
    labels:
      - traefik.enable=true
      # Dashboard accesible localmente
      - traefik.http.routers.dashboard.rule=Host(`localhost`) || Host(`127.0.0.1`) || PathPrefix(`/dashboard`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entrypoints=web

  # =======================
  # Backend (Django API)
  # =======================
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sancho_backend
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8030"
    volumes:
      - .:/app
    expose:
      - "8030"
    environment:
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=maestro_inventario
      - DATABASE_USER=maestro
      - DATABASE_PASSWORD=maestro
      - DATABASE_HOST=sancho_db
      - DATABASE_PORT=5432
      - DEBUG=False
      - ALLOWED_HOSTS=www.sanchodistribuidora.com,sanchodistribuidora.com,localhost,127.0.0.1
    depends_on:
      - db
    networks:
      - sancho_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`www.sanchodistribuidora.com`) && PathPrefix(`/api/`)
      - traefik.http.routers.backend.service=backend
      - traefik.http.routers.backend.tls.certresolver=letsencrypt
      - traefik.http.routers.backend.middlewares=backend-stripprefix,cors
      - traefik.http.services.backend.loadbalancer.server.port=8030
      
      # Strip /api prefix antes de enviar al backend
      - traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api

      # CORS middleware
      - traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH
      - traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*
      - traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://www.sanchodistribuidora.com,https://sanchodistribuidora.com
      - traefik.http.middlewares.cors.headers.accesscontrolmaxage=86400

  # =======================
  # Frontend (Nginx est√°tico)
  # =======================
  frontend:
    build:
      context: ./dbackf
      dockerfile: Dockerfile
    container_name: sancho_frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - sancho_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`www.sanchodistribuidora.com`)
      - traefik.http.routers.frontend.tls.certresolver=letsencrypt
      - traefik.http.routers.frontend.service=frontend
      - traefik.http.services.frontend.loadbalancer.server.port=80

  # =======================
  # Database (PostgreSQL)
  # =======================
  db:
    image: postgres:15
    container_name: sancho_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: maestro_inventario
      POSTGRES_USER: maestro
      POSTGRES_PASSWORD: maestro
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - sancho_postgres_data:/var/lib/postgresql/data/
    networks:
      - sancho_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U maestro -d maestro_inventario"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  sancho_network:
    driver: bridge
    name: sancho_network

volumes:
  sancho_postgres_data:
    driver: local
  sancho_letsencrypt:
    driver: local